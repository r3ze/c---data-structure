<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
  <data name="pictureBox3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lnFj419rQySGVUfFzwAAAABJRU5ErkJggg==
</value>
  </data>
</root>